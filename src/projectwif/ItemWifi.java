/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectwif;

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Eric
 */
public class ItemWifi extends javax.swing.JPanel implements ListCellRenderer<ModelWifi>{
      ArrayList<ModelWifi> list;
      JList<ModelWifi> listData;
    /**
     * Creates new form ItemWifi
     */
    public ItemWifi(ArrayList<ModelWifi> list,JList<ModelWifi> listData) {
        this.list=list;
        this.listData=listData;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbIcon = new javax.swing.JLabel();
        ssid = new javax.swing.JLabel();
        ip = new javax.swing.JLabel();
        mac = new javax.swing.JLabel();

        lbIcon.setText("Icon");

        ssid.setText("WIFI name");

        ip.setText("IP");

        mac.setText("Mac");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lbIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ssid, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                        .addGap(202, 202, 202))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mac)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(198, 198, 198))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ssid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ip)
                        .addGap(5, 5, 5)
                        .addComponent(mac)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
@Override
public Component getListCellRendererComponent(JList<? extends ModelWifi> list,
        ModelWifi model_wifi, int index, boolean isSelected, boolean cellHasFocus) {
    
    lbIcon.setIcon(new ImageIcon(getClass().getResource("/images/" + model_wifi.getIconName() + ".png")));
    lbIcon.setBounds(142, 119, 46, 14);
   
    ssid.setText("SSID: "+model_wifi.getSSID());
    ip.setText("IP: "+model_wifi.getIP());
    mac.setText("Mac: "+"unknown");
    ip.setForeground(Color.blue);
    mac.setForeground(Color.red);
   // mac.setText(String.valueOf(index));
 
    // set Opaque to change background color of JLabel
    ssid.setOpaque(true);
    ip.setOpaque(true);
    mac.setOpaque(true);
    lbIcon.setOpaque(true);

    
    if (isSelected) {
        ssid.setBackground(Color.YELLOW);
        ip.setBackground(Color.YELLOW);
        lbIcon.setBackground(Color.YELLOW);
        mac.setBackground(Color.YELLOW);
        setBackground(Color.YELLOW);
    
    } else { // when don't select
        ssid.setBackground(list.getBackground());
        ip.setBackground(list.getBackground());
        lbIcon.setBackground(list.getBackground());
         mac.setBackground(list.getBackground());
        setBackground(list.getBackground());
    }
    return this;
    
    
    
}
      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ip;
    private javax.swing.JLabel lbIcon;
    private javax.swing.JLabel mac;
    private javax.swing.JLabel ssid;
    // End of variables declaration//GEN-END:variables
}
